/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

import type { Image, Audio, Pdf, Video } from "@boundaryml/baml"
/**
 * Recursively partial type that can be null.
 *
 * @deprecated Use types from the `partial_types` namespace instead, which provides type-safe partial implementations
 * @template T The type to make recursively partial.
 */
export type RecursivePartialNull<T> = T extends object
    ? { [P in keyof T]?: RecursivePartialNull<T[P]> }
    : T | null;

export interface Checked<T,CheckName extends string = string> {
    value: T,
    checks: Record<CheckName, Check>,
}

export interface Check {
    name: string,
    expr: string
    status: "succeeded" | "failed"
}

export function all_succeeded<CheckName extends string>(checks: Record<CheckName, Check>): boolean {
    return get_checks(checks).every(check => check.status === "succeeded")
}

export function get_checks<CheckName extends string>(checks: Record<CheckName, Check>): Check[] {
    return Object.values(checks)
}
export interface BankTransaction {
  date: string
  description: string
  amount: number
  balance: number
  transaction_type: string
  
}

export interface CreditScoreAnalysis {
  overall_score: number
  score_category: string
  monthly_income?: number | null
  monthly_expenses?: number | null
  income_breakdown?: IncomeBreakdown | null
  expense_breakdown?: ExpenseBreakdown | null
  savings_rate?: number | null
  debt_to_income_ratio?: number | null
  payment_consistency_score: number
  account_stability_months: number
  risk_factors: string[]
  positive_factors: string[]
  recommendations: string[]
  detailed_analysis: string
  
}

export interface ExpenseBreakdown {
  actual_expenses: number
  fund_transfers_out: number
  total_debits: number
  calculation_method: string
  
}

export interface IncomeBreakdown {
  salary_income?: number | null
  other_income?: number | null
  fund_transfers_in: number
  total_credits: number
  calculation_method: string
  
}
