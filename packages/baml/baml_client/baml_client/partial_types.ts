/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

import type { Image, Audio, Pdf, Video } from "@boundaryml/baml"
import type { Checked, Check } from "./types"
import type {  BankTransaction,  CreditScoreAnalysis,  ExpenseBreakdown,  IncomeBreakdown } from "./types"
import type * as types from "./types"

/******************************************************************************
*
*  These types are used for streaming, for when an instance of a type
*  is still being built up and any of its fields is not yet fully available.
*
******************************************************************************/

export interface StreamState<T> {
  value: T
  state: "Pending" | "Incomplete" | "Complete"
}

export namespace partial_types {
    export interface BankTransaction {
      date?: string | null
      description?: string | null
      amount?: number | null
      balance?: number | null
      transaction_type?: string | null
    }
    export interface CreditScoreAnalysis {
      overall_score?: number | null
      score_category?: string | null
      monthly_income?: number | null
      monthly_expenses?: number | null
      income_breakdown?: IncomeBreakdown | null
      expense_breakdown?: ExpenseBreakdown | null
      savings_rate?: number | null
      debt_to_income_ratio?: number | null
      payment_consistency_score?: number | null
      account_stability_months?: number | null
      risk_factors: string[]
      positive_factors: string[]
      recommendations: string[]
      detailed_analysis?: string | null
    }
    export interface ExpenseBreakdown {
      actual_expenses?: number | null
      fund_transfers_out?: number | null
      total_debits?: number | null
      calculation_method?: string | null
    }
    export interface IncomeBreakdown {
      salary_income?: number | null
      other_income?: number | null
      fund_transfers_in?: number | null
      total_credits?: number | null
      calculation_method?: string | null
    }
}